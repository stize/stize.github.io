{"version":3,"sources":["webpack:///./src/templates/page.js"],"names":["query","Page","render","this","props","className","src","withPrefix","alt","htmlToReact","React","Component"],"mappings":"kQASaA,EAAK,aAQGC,E,kGACjBC,OAAA,WACI,OACI,kBAAC,IAAWC,KAAKC,MACjB,yBAAKC,UAAU,SACb,yBAAKA,UAAU,gBACb,6BAASA,UAAU,kBACjB,4BAAQA,UAAU,eAChB,wBAAIA,UAAU,cAAc,IAAMF,KAAKC,MAAO,gCAAiC,QAEhF,IAAMD,KAAKC,MAAO,gCAAiC,OACpD,yBAAKC,UAAU,kBACb,yBAAKC,IAAKC,YAAW,IAAMJ,KAAKC,MAAO,gCAAiC,OAAQI,IAAK,IAAML,KAAKC,MAAO,gCAAiC,SAGzI,IAAMD,KAAKC,MAAO,mCAAoC,OACvD,yBAAKC,UAAU,iBACZI,YAAY,IAAMN,KAAKC,MAAO,mCAAoC,QAGrE,yBAAKC,UAAU,gBACZI,YAAY,IAAMN,KAAKC,MAAO,mBAAoB,a,GArBrCM,IAAMC","file":"component---src-templates-page-js-5e2f1cfa39038bbd1982.js","sourcesContent":["import React from 'react';\nimport _ from 'lodash';\nimport {graphql} from 'gatsby';\n\nimport {Layout} from '../components/index';\nimport {withPrefix, htmlToReact} from '../utils';\n\n// this minimal GraphQL query ensures that when 'gatsby develop' is running,\n// any changes to content files are reflected in browser\nexport const query = graphql`\n  query($url: String) {\n    sitePage(path: {eq: $url}) {\n      id\n    }\n  }\n`;\n\nexport default class Page extends React.Component {\n    render() {\n        return (\n            <Layout {...this.props}>\n            <div className=\"outer\">\n              <div className=\"inner-medium\">\n                <article className=\"post post-full\">\n                  <header className=\"post-header\">\n                    <h1 className=\"post-title\">{_.get(this.props, 'pageContext.frontmatter.title', null)}</h1>\n                  </header>\n                  {_.get(this.props, 'pageContext.frontmatter.image', null) && (\n                  <div className=\"post-thumbnail\">\n                    <img src={withPrefix(_.get(this.props, 'pageContext.frontmatter.image', null))} alt={_.get(this.props, 'pageContext.frontmatter.title', null)} />\n                  </div>\n                  )}\n                  {_.get(this.props, 'pageContext.frontmatter.subtitle', null) && (\n                  <div className=\"post-subtitle\">\n                    {htmlToReact(_.get(this.props, 'pageContext.frontmatter.subtitle', null))}\n                  </div>\n                  )}\n                  <div className=\"post-content\">\n                    {htmlToReact(_.get(this.props, 'pageContext.html', null))}\n                  </div>\n                </article>\n              </div>\n            </div>\n            </Layout>\n        );\n    }\n}\n"],"sourceRoot":""}